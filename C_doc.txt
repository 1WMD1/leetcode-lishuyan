一些C语言上应该注意的问题：
关于指针数组
 char *strs[]和char strs[]在C语言中的含义和用法有所不同。
char *strs[]：这是一个指针数组，其中每个元素都是指向字符（字符串）的指针。在函数参数中，char *strs[]可以接受一个字符串数组。
例如，char *strs[] = {"hello", "world"}表示一个包含两个字符串的数组，可以通过strs[0]和strs[1]分别访问这两个字符串。
char strs[]：这是一个字符数组，其中每个元素都是字符。在函数参数中，char strs[]可以接受一个字符串（字符数组）。
例如，char strs[] = "hello"表示一个包含5个字符的数组，可以通过索引访问每个字符，例如strs[0]获取第一个字符。
总结来说，char *strs[]是一个指针数组，每个元素是一个指向字符的指针，通常用于表示字符串数组；而char strs[]是一个字符数组，用于表示单个字符串。
在函数参数中，两者的用法和含义不同，需要根据具体情况选择适合的类型。
当我们定义char *strs[]时，这是一个指针数组，每个元素都是一个指向字符（字符串）的指针。
在这个示例中，strs[0]存储的是指向字符串"hello"的指针，而strs[1]存储的是指向字符串"world"的指针。
要访问字符串"hello"中的字符'e'，可以使用指针运算符和索引操作符来访问。以下是两种常见的方法：
方法一：使用指针运算符

char *str = "hello";
char *ptr = str;  // 将指针ptr指向字符串"hello"的首地址
// 通过指针运算符访问字符'e'
char e = *(ptr + 1);  // ptr + 1表示指针向后移动一个位置，即指向字符'e'
printf("%c\n", e);  // 输出字符'e'

方法二：使用索引操作符
char str[] = "hello";
// 通过索引操作符访问字符'e'
char e = str[1];  // str[1]表示数组索引为1的元素，即字符'e'
printf("%c\n", e);  // 输出字符'e'

无论使用哪种方法，都可以访问到字符串"hello"中的字符'e'。注意，C语言中的字符串是以零终止的字符数组，即以空字符\0结尾，所以索引从0开始。在字符串"hello"中，字符'e'的索引为1。
